pipeline {
    agent any
    
    environment {
        LOG_FILE = 'pipeline.log'
    }
    
    stages {
        stage('Build') {
            steps {
                echo 'Building package using Maven'
            }
        }
        
        stage('Unit and Integration Tests') {
            steps {
                echo 'Running unit tests using JUnit'
                echo 'Running integration tests using JUnit'
            }
            post {
                always {
                    script {
                        writeFile file: env.LOG_FILE, text: currentBuild.rawBuild.getLog().join('\n')
                        mail to: 'shalomingabo99@gmail.com',
                             subject: 'Unit and Integration Tests Result',
                             body: 'Unit and Integration Tests have completed. Please find the attached log for details.',
                             attachmentsPattern: env.LOG_FILE
                    }
                }
            }
        }
        
        stage('Code Analysis') {
            steps {
                echo 'Running code analysis using SonarQube...'
            }
            post {
                always {
                    script {
                        writeFile file: env.LOG_FILE, text: currentBuild.rawBuild.getLog().join('\n')
                        mail to: 'shalomingabo99@gmail.com',
                             subject: 'Code Analysis Result',
                             body: 'Code Analysis has completed. Please find the attached log for details.',
                             attachmentsPattern: env.LOG_FILE
                    }
                }
            }
        }
        
        stage('Security Scan') {
            steps {
                echo 'Performing security scan using OWASP ZAP...'
            }
            post {
                always {
                    script {
                        writeFile file: env.LOG_FILE, text: currentBuild.rawBuild.getLog().join('\n')
                        mail to: 'shalomingabo99@gmail.com',
                             subject: 'Security Scan Result',
                             body: 'Security Scan has completed. Please find the attached log for details.',
                             attachmentsPattern: env.LOG_FILE
                    }
                }
            }
        }
        
        stage('Deploy to Staging') {
            steps {
                echo 'Deploying to staging server using AWS EC2 instance...'
            }
        }
        
        stage('Integration Tests on Staging') {
            steps {
                echo 'Running integration tests on staging environment using Selenium'
            }
            post {
                always {
                    script {
                        writeFile file: env.LOG_FILE, text: currentBuild.rawBuild.getLog().join('\n')
                        mail to: 'shalomingabo99@gmail.com',
                             subject: 'Integration Tests on Staging Result',
                             body: 'Integration Tests on Staging have completed. Please find the attached log for details.',
                             attachmentsPattern: env.LOG_FILE
                    }
                }
            }
        }
        
        stage('Deploy to Production') {
            steps {
                echo 'Deploying to production server using AWS EC2 instance'
            }
        }
    }
    
    post {
        always {
            script {
                writeFile file: env.LOG_FILE, text: currentBuild.rawBuild.getLog().join('\n')
                mail to: 'shalomingabo99@gmail.com',
                     subject: 'Pipeline Result',
                     body: 'The pipeline run has completed. Please find the attached log for details.',
                     attachmentsPattern: env.LOG_FILE
            }
        }
    }
}
